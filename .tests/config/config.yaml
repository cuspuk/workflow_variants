reads: # Specify the order and methods for each read processing step. If no method is specified, the step will not be performed.
  subsampling: null # OPT - specify method of subsampling. Allowed: "seqtk", "null".
  trimming: "cutadapt" # OPT - specify method of trimming. Allowed: "cutadapt", "null".
  decontamination: null # OPT - specify method of decontamination. Allowed: "kraken", "null".
  deduplication: null # OPT - specify method of deduplication. Allowed: "fastuniq", "null".
  _generate_fastqc_for: [] # OPT - specify which steps to generate fastqc for. Allowed: "original"."subsampling", "trimming", "decontamination", "deduplication" or empty list (default: empty list).

mapping:
  mapping: "bwa" # Specify method for mapping. Allowed: "bwa".
  reference_dirs: ["test_data/reference/sars_cov_2"] # specify list of reference dirs to map against. Each dir must contain a fasta file names as the basename dir.
  deduplication: "picard" # OPT - specify method for mapping deduplication. Allowed: "picard", null.
  _generate_qualimap: [] # OPT - specify which steps to generate qualimap for. Allowed: "mapping", "deduplication" or empty list (default: empty list).

variants:
  callers: ["bcftools", "ivar", "freebayes", "mutect2"] # Specify method for variant calling: "bcftools", "ivar".

consensus:
  callers: ["ivar"]

### HYPERPARAMETERS #############################
reads__trimming__cutadapt:
  # 1st stage - trimming
  cut_from_start_r1: null # OPT - removes a specified number of bases from the beginning of the R1 read.
  cut_from_start_r2: null # OPT - removes a specified number of bases from the beginning of the R2 read.
  cut_from_end_r1: null # OPT - removes a specified number of bases from the end of the R1 read.
  cut_from_end_r2: null # OPT - removes a specified number of bases from the end of the R2 read.
  quality_cutoff_from_5_end_r1: 20 # cutoff on 5' end of R1 read. The second step.
  quality_cutoff_from_3_end_r1: 20 # cutoff on 3' end of R1 read. The second step.
  quality_cutoff_from_5_end_r2: 20 # cutoff on 5' end of R2 read. The second step.
  quality_cutoff_from_3_end_r2: 20 # cutoff on 3' end of R2 read. The second step.

  # 2nd stage - Adapter removal
  adapter_removal: # OPT - set "do" to false to skip this step.
    do: false # If true, all below options are required. Else, they are ignored/can be deleted.

  # 3rd stage - post adapter trimming
  shorten_to_length: null # OPT - both R1 and R2 are shortened to this length.
  trim_N_bases_on_ends: null # OPT - trim flanking N's on both read ends.

  # 4th stage - Filtering
  min_length_r1: null # OPT - minimum R1 read length. If R1 read is shorter, both R1 and R2 reads are discarded. The fourth step.
  min_length_r2: null # OPT - minimum R2 read length. If R2 read is shorter, both R1 and R2 reads are discarded. The fourth step.
  max_length_r1: null # OPT - maximum R1 read length. If R1 read is longer, both R1 and R2 reads are discarded. The fourth step.
  max_length_r2: null # OPT - maximum R2 read length. If R2 read is longer, both R1 and R2 reads are discarded. The fourth step.
  max_n_bases: null # OPT - Discard read if R1 or R2 has more than the specified number of N bases. The fifth step.
  max_expected_errors: null # OPT - Discard read if R1 or R2 has more expected errors than this.

variants__bcftools: # Uses bcftools mpileup and bcftools call.
  # mpileup params:
  count_orphans: false # Bool (false): Set to true to use also anomalous read pairs, i.e. without the properly-paired flag set.
  compute_base_alignment_quality: "redo" # Enum ("redo"): Controls probabilistic realignment for base alignment quality computation. Allowed: "no", "redo", "full". No" disables it. "Redo" runs it for problematic regions, "Full" runs it on all reads.
  adjust_mapping_quality: 50 # Int (0): Adjust quality for high number of mismatches. Recommended to set to 50 when using BWA.
  max_read_depth: 600000 # Int (250): At a position, read maximally this number of reads. Should be adjusted to about twice the average read depth as higher read depths usually indicate problematic regions which are often enriched for artefacts.
  max_depth_indels: 250 # Int (250): Skip INDEL calling if the average per-sample depth is above this value.
  min_mapping_quality: 13 # Int (0): Minimum mapping quality for an alignment to be used.
  min_base_quality: 0 # Int (13): Minimum base quality for a base to be considered.
  max_base_quality_cap: 60 # Int (60): Caps the base quality to a maximum value. This can be particularly useful on technologies that produce overly optimistic high qualities.
  mpileup_annotate: ["AD", "ADF", "ADR", "DP"] # array of enums ([]): List of tags to add with mpileup. Allowed: see the end of file.
  gap_ext_prob: 20 # Int(20): Phred-scaled gap extension sequencing error probability. Reducing it leads to longer indels.
  open_prob: 40 # Int(40): Phred-scaled gap open sequencing error probability. Reducing INT leads to more indel calls.
  min_fraction_of_gaps: 0.05 # float(0.002): Minimum fraction of gapped reads
  # Caller params
  ploidy: "2" # Enum ["2"]: Predefined ploidy. Allowed: 'GRCh37', 'GRCh38', 'X', 'Y', '1', '2'".
  prior: 0.0011 # Float [0.0011]: Expected substitution rate per site. Stricter calls are obtained by using smaller value, more benevolent calls are obtained by using bigger value.
  keep_alts: True # Bool [False]: Output all alternate alleles present in the alignments even if they do not appear in any of the genotypes.
  variants_only: True # Bool [False]: Output variant sites only.
  caller_annotate: ["GQ", "GP"] # Array of enums ([]): Comma-separated list of FORMAT fields to output. Allowed: "GQ", "GP", "INFO/PV4".

  do_postfilter: True # Whether to postfilter variants.
  postfilter: # Uses bcftools norm, annotate and filter.
    multiallelic: "+any" # Split (-) or join (+) biallelic sites into multiallelic records. Define snps | indels | any | both.
    atomize: False # Whether to split MNVs into consecutive SNVs.
    atom_overlaps: "star" # OPT - Allowed: "missing", "star". Alleles missing because of an overlapping variant can be set either to missing (.) or to star (*) as recommended by VCF spec.
    snp_gap: 3 # Filter SNPs within INT base pairs of an indel or other other variant type.
    indel_gap: 10 # Filter clusters of indels separated by INT or fewer base pairs allowing only one to pass.
    set_gts_for_failed: "missing" # Either missing value '.'  or reference allele ('0').
    include: 'INFO/DP>=10 & GT="alt" & (DP4[2]+DP4[3])/INFO/DP>=0.50' # Filter which sites to include.
    exclude: "" # Filter which sites to include.
    trim_alt_alleles: True # Remove alleles not seen in the genotype fields from the ALT column.

variants__ivar:
  count_orphans: false # Set to true to use also anomalous read pairs, i.e. without the properly-paired flag set.
  max_read_depth: 600000 # Limits the number of reads to load in memory per input file.
  min_base_quality: 13 # Minimum base quality for a base to be considered. Setting to 0 make the overlapping bases reappear, albeit with 0 quality.
  min_mapping_quality: 20 # Minimum mapping quality for an alignment to be used.
  min_base_quality_threshold: 20 # Minimum quality score threshold to count base.
  min_frequency_threshold: 0.03 # Minimum frequency threshold (0 - 1) to call variants.
  min_read_depth: 10 # Minimum read depth to call variants.

  do_postfilter: True # Whether to postfilter variants.
  postfilter:
    min_alt_depth: 2 # Mixed positions must have at least this ALT_DP value.
    min_alt_freq: 0.1 # Mixed positions must have at least this ALT_FREQ value.
    max_alt_freq: 0.9 # Mixed positions cannot have ALT_FREQ value equal or larger than this.
    min_total_depth: 10 # Mixed positions must have at least this TOTAL_DP value.

variants__mutect2:
  base_quality_score_threshold: 18 # Int (18): Base qualities below this threshold will be reduced to the minimum (6)
  callable_depth: 10 # Int (10): Minimum depth to be considered callable for Mutect stats. Does not affect genotyping.
  f1r2_max_depth: 200 # Int (200): Sites with depth higher than this value will be grouped.
  f1r2_median_mq: 50 # Int (50): Skip sites with median mapping quality below this value.
  f1r2_min_bq: 20 # Int (20): Exclude bases below this quality from pileup.
  min_base_quality_score: 10 # Int (10): Minimum base quality score for a base to be considered.
  max_reads_per_alignment_start: 50 # Int (50): Maximum number of reads to retain per alignment start position. Reads above this threshold will be downsampled. Set to 0 to disable.

  do_postfilter: True # Whether to postfilter variants.
  postfilter:
    microbial_mode: True # Bool (False): Set filters to microbial defaults.
    min_median_base_quality: 20 # Int (20): Minimum median base quality of alt reads.
    min_median_mapping_quality: -1 # Int (-1): Minimum median mapping quality of alt reads.
    min_median_read_position: 1 # Int (1): Minimum median distance of variants from the end of reads.
    min_reads_per_strand: 0 # Int (0): Minimum alt reads required on both forward and reverse strands.
    min_slippage_length: 8 # Int (8): Minimum number of reference bases in an STR to suspect polymerase slippage.
    pcr_slippage_rate: 0.1 # Float (0.1): The frequency of polymerase slippage in contexts where it is suspected.

variants__freebayes:
  # input filters for freebayes
  min_mapping_quality: 30 # Exclude alignments from analysis if they have a mapping quality less than Q. Default: 30.
  min_base_quality: 20 # Exclude alleles from analysis if their supporting base quality is less than Q. Default: 20.
  mismatch_base_quality_threshold: 10 # Count mismatches with base quality higher than this. Default: 10.
  read_mismatch_limit: null # OPT - Exclude reads with more than N mismatches where each mismatch has base quality >= mismatch-base-quality-threshold. Default: null.
  read_max_mismatch_fraction: 1.0 # Exclude reads with more than N [0,1] fraction of mismatches where each mismatch has base quality >= mismatch-base-quality-threshold. Default: 1.0.
  read_indel_limit: null # OPT - Exclude reads with more than N separate gaps. Default: null.
  read_snp_limit: null # OPT - Exclude reads with more than N base mismatches, ignoring gaps, and quality higher than `mismatch_base_quality_threshold`. Default: null.
  indel_exclusion_window: 0 # Ignore portions of alignments this many bases from a putative insertion or deletion allele. Default: 0.
  min_alternate_fraction: 0.05 # Require at least this fraction of observations supporting an alternate allele within a single individual in the in order to evaluate the position. Default: 0.05.
  min_alternate_count: 2 # Require at least this count of observations supporting an alternate allele within a single individual in order to evaluate the position. Default: 2.
  min_coverage: 10 # Require at least this coverage to process a site. Default: 0.
  limit_coverage: null # OPT - Integer. Downsample per-sample coverage to this level if greater than this coverage. Default: null.
  skip_coverage: null # OPT - Integer. Skip processing of alignments overlapping positions with coverage >N. This filters sites above this coverage, but will also reduce data nearby. Default: null.
  ploidy: 2 # Sets the default ploidy for the analysis to N. Default: 2
  gvcf: False # Write gVCF output, which indicates coverage in uncalled regions, emitting a record for all bases. Default: False.
  report_all_haplotype_alleles: False # At sites where genotypes are made over haplotype alleles, provide information about all alleles in output, not only those which are called. Default: False.
  report_monorphic: False # Report even loci which appear to be monomorphic, and report all considered alleles, even those which are not in called genotypes. Loci which do not have any potential alternates have '.' for ALT. Default: False

  do_postfilter: True # Whether to postfilter variants.
  postfilter: # Uses bcftools norm, annotate and filter.
    multiallelic: "+any" # OPT - Split (-) or join (+) biallelic sites into multiallelic records. Define snps | indels | any | both.
    atomize: False # Whether to split MNVs into consecutive SNVs.
    atom_overlaps: "star" # OPT - Allowed: "missing", "star". Alleles missing because of an overlapping variant can be set either to missing (.) or to star (*) as recommended by VCF spec.
    snp_gap: 3 # Filter SNPs within INT base pairs of an indel or other other variant type.
    indel_gap: 10 # Filter clusters of indels separated by INT or fewer base pairs allowing only one to pass.
    set_gts_for_failed: "missing" # OPT - Allowed: "missing", "reference". Set genotypes of failed samples to missing value (.) or reference allele (0).
    include: "" # Filter which sites to include.
    exclude: "" # Filter which sites to exclude.
    trim_alt_alleles: True # Remove alleles not seen in the genotype fields from the ALT column.

consensus__ivar:
  count_orphans: false # Set to true to use also anomalous read pairs, i.e. without the properly-paired flag set.
  max_read_depth: 1000 # limits the number of reads to load in memory per input file.
  min_base_quality: 13 # minimum base quality for a base to be considered. Setting to 0 make the overlapping bases reappear, albeit with 0 quality.
  min_mapping_quality: 20 # minimum mapping quality for an alignment to be used.
  consensus_base_quality_threshold: 20 # Minimum quality score threshold to count base.
  consensus_frequency_threshold: 0.5 # Minimum frequency threshold to call consensus.
  min_consensus_depth: 10 # Minimum depth to call consensus.

### RESOURCES #############################

max_threads: 8
max_mem_mb: 4096

resources:
  reads__trimming_mem_mb: 4096
  reads__fastqc_mem_mb: 2048
  mapping__mapping_mem_mb: 4096
  mapping__indexing_mem_mb: 4096
  mapping__deduplication_mem_mb: 4096
  mapping__qualimap_mem_mb: 4096
  variants__freebayes_mem_mb: 4096
  variants__mutect2_mem_mb: 4096

threads:
  reads__trimming: 4
  reads__fastqc: 1
  reads__deduplication: 4
  reads__decontamination: 8
  mapping__mapping: 4
  mapping__indexing: 2
  variants__bcftools: 2
  variants__freebayes: 4
  variants__mutect2: 4

module_versions:
  reads: "v3.2.1"
  mapping: "v2.1.0"
